@model WritingPlatform.Models.WorksViewModel

@{
    ViewBag.Title = "Details";
    AjaxOptions ajax = new AjaxOptions
    {
        UpdateTargetId = "commentListFor",
        Url = Url.Action("GetComments")
    };
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

<h2>Learn More</h2>

@*<div class="form-group">
    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.Content, 10, 150, new { @readonly = "readonly", htmlAttributes = new { @class = "form-control" } })
    </div>
</div>*@

@using (Ajax.BeginForm(ajax))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Content, 10, 150, new { @readonly = "readonly", htmlAttributes = new { @class = "form-control" } })
            @Html.EditorFor(model => model.Id, " ", new { htmlAttributes = new { @class = "form-control hidden" } })


        </div>
    </div>

    <div class="form-horizontal">
        <h4>WorksViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            
            @Html.Label("Comment", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, " ", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rating", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserId, Enumerable.Range(1, 10)
                 .Select(x => new SelectListItem
                 {
                     Text = x.ToString(),
                     Value = x.ToString()
                 }))
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Оставить отзыв" class="btn btn-default" />
            </div>
        </div>
        
        <div id="commentListFor">
            
            @Html.Action("GetComments")
        </div>
    </div>
}



@*@foreach (var item in ViewBag.CommentsList)
    {
            <td scope="col">Username: @item.UserName</td>
            <p></p>
            <p>Comment:<textarea readonly="readonly" rows="3" cols="40"> @item.Comment</textarea></p>
            <p></p>
    }*@


